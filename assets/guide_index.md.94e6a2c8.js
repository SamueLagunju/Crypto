import{o as e,c as a,a as i}from"./app.e98a0319.js";const t='{"title":"AngelDocs","description":"","frontmatter":{},"headers":[{"level":2,"title":"Motivation","slug":"motivation"},{"level":2,"title":"Screenshots","slug":"screenshots"},{"level":2,"title":"Features","slug":"features"},{"level":3,"title":"Guides","slug":"guides"},{"level":3,"title":"Class hierarchy","slug":"class-hierarchy"},{"level":3,"title":"Literate source code","slug":"literate-source-code"},{"level":2,"title":"Languages","slug":"languages"},{"level":3,"title":"Language libraries","slug":"language-libraries"},{"level":2,"title":"Configuration","slug":"configuration"},{"level":2,"title":"Tech/Framework used","slug":"tech-framework-used"}],"relativePath":"guide/index.md","lastUpdated":1652553600000}',r={},o=i('<h1 id="angeldocs"><a class="header-anchor" href="#angeldocs" aria-hidden="true">#</a> AngelDocs</h1><p>Generate beautiful and comprehensive documentation from source.</p><p>Supports multiple languages and multi-project repos.</p><h2 id="motivation"><a class="header-anchor" href="#motivation" aria-hidden="true">#</a> Motivation</h2><p>Use this application to share knowledge and document intentions by code authors about specific pieces of code. Accessible and comprehensive documentation benefits visitors to the code and speeds up the onboarding process. It is also useful to preserve knowledge as developers come and go. By keeping the documentation as part of the source itself (internal documentation) as opposed to a separate library of documents and technical diagrams (external documentation), the documentation grows along with the code. This keeps it relevant, useful, and available.</p><p>This project was inspired by the principles of <em>Living Documentation</em>.</p><h2 id="screenshots"><a class="header-anchor" href="#screenshots" aria-hidden="true">#</a> Screenshots</h2><p>[TODO]</p><h2 id="features"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><p>Features summarized:</p><ul><li>Write comments in Markdown</li><li>Output to HTML or Markdown</li><li>Supports multiple languages</li><li>Supports multiple projects</li><li>Write guides in markdown</li><li>Semi-automatic documentation generator</li><li>Browse class hierarchies</li><li>Read through source code</li></ul><h3 id="guides"><a class="header-anchor" href="#guides" aria-hidden="true">#</a> Guides</h3><p>A conceptual overview of the project.</p><img src="https://imgur.com/dBBHo9M.png" alt="Example screenshot" width="500"><p>Authored guides can be added as Markdown files in the <em>docs</em> directory. These files are automatically added to the project page&#39;s table of contents.</p><h3 id="class-hierarchy"><a class="header-anchor" href="#class-hierarchy" aria-hidden="true">#</a> Class hierarchy</h3><p>A high-level view of the project&#39;s modules and their interactions.</p><img src="https://imgur.com/PPttJFC.png" alt="Example screenshot" width="500"><p>Classes, interfaces, functions, etc. are mapped and linked. If available, API docs are generated. Any markdown files found in the same folder are added to the page.</p><h3 id="literate-source-code"><a class="header-anchor" href="#literate-source-code" aria-hidden="true">#</a> Literate source code</h3><p>A low-level view of the individual source files.</p><img src="https://imgur.com/8mshWSk.png" alt="Example screenshot" width="500"><p>Docstrings and source comments are displayed alongside their relevant code sections. Any markdown files found in the same folder are added to the page. Markdown comments are supported.</p><p><em>(Literate here refers to <a href="https://en.wikipedia.org/wiki/Literate_programming" target="_blank" rel="noopener noreferrer">Literate Programming</a>)</em></p><h2 id="languages"><a class="header-anchor" href="#languages" aria-hidden="true">#</a> Languages</h2><p>Document generation is delegated to the appropriate library for the project language. This can be overridden in the configuration.</p><h3 id="language-libraries"><a class="header-anchor" href="#language-libraries" aria-hidden="true">#</a> Language libraries</h3><ul><li>Python: Pyccoon</li><li>JavaScript: ESDocs</li><li>C/C++: DOxygen</li><li>Other: NaturalDocs</li></ul><h2 id="configuration"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h2><p>Create a <code>.angeldocs</code> file in the root directory.</p><p>[TODO]</p><h2 id="tech-framework-used"><a class="header-anchor" href="#tech-framework-used" aria-hidden="true">#</a> Tech/Framework used</h2><ul><li>VuePress (static site generation)</li><li>Pycco/Pyccoon (Python document generation)</li><li>ESDocs (JavaScript document generation)</li><li>DOxygen (C/C++ document generation)</li><li>NaturalDocs (Any-language document generation)</li></ul>',33);r.render=function(i,t,r,s,n,l){return e(),a("div",null,[o])};export default r;export{t as __pageData};
